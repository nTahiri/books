/*
 * Books Store
 *
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * API version: 0.0.1
 * Contact: nabil.tahri@polymtl.ca
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package book

import (
	"encoding/json"
	"net/http"
	"strings"
	//"github.com/gorilla/mux"
)

// A DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer) Router {
	return &DefaultApiController{service: s}
}

// Routes returns all of the api route for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{
		{
			"GetBooks",
			strings.ToUpper("Get"),
			"/v1/api/books",
			c.GetBooks,
		},
		{
			"SearchBooks",
			strings.ToUpper("Post"),
			"/v1/api/books/search",
			c.SearchBooks,
		},
	}
}

// GetBooks - Returns all books
func (c *DefaultApiController) GetBooks(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetBooks()
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// SearchBooks - Search for books with specific filter
func (c *DefaultApiController) SearchBooks(w http.ResponseWriter, r *http.Request) {
	book := &SearchPayload{}
	if err := json.NewDecoder(r.Body).Decode(&book); err != nil {
		w.WriteHeader(500)
		return
	}

	result, err := c.service.SearchBooks(*book)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}
